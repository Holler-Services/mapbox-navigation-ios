{"abstract":[{"text":"Options to configure fetching,  detecting and accepting ","type":"text"},{"type":"codeVoice","code":"AlternativeRoute"},{"text":"s during navigation.","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/MapboxNavigationCore\/SQ","doc:\/\/MapboxNavigationCore\/s8SendableP"]}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AlternativeRoutesDetectionConfig","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/AcceptionPolicy-swift.struct"],"title":"Structures"},{"title":"Initializers","identifiers":["doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/init(refreshesAfterPassingDeviation:refreshesWhenNoAvailableAlternatives:acceptionPolicy:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/acceptionPolicy-swift.property","doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/refreshesAfterPassingDeviation","doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/refreshesWhenNoAvailableAlternatives"]},{"title":"Enumerations","identifiers":["doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/RefreshOnEmpty"]},{"generated":true,"identifiers":["doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/Equatable-Implementations"],"title":"Default Implementations"}],"sections":[],"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AlternativeRoutesDetectionConfig"}],"title":"AlternativeRoutesDetectionConfig","modules":[{"name":"MapboxNavigationCore"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AlternativeRoutesDetectionConfig","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:20MapboxNavigationCore32AlternativeRoutesDetectionConfigV","symbolKind":"struct"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/mapboxnavigationcore\/alternativeroutesdetectionconfig"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MapboxNavigationCore/SQ":{"identifier":"doc:\/\/MapboxNavigationCore\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://MapboxNavigationCore/documentation/MapboxNavigationCore/AlternativeRoutesDetectionConfig/RefreshOnEmpty":{"abstract":[{"type":"text","text":"Describes how periodic requests for "},{"code":"AlternativeRoute","type":"codeVoice"},{"text":"s should be made.","type":"text"}],"role":"symbol","url":"\/documentation\/mapboxnavigationcore\/alternativeroutesdetectionconfig\/refreshonempty","type":"topic","navigatorTitle":[{"text":"RefreshOnEmpty","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RefreshOnEmpty"}],"identifier":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/RefreshOnEmpty","title":"AlternativeRoutesDetectionConfig.RefreshOnEmpty","kind":"symbol"},"doc://MapboxNavigationCore/documentation/MapboxNavigationCore/AlternativeRoutesDetectionConfig/refreshesWhenNoAvailableAlternatives":{"title":"refreshesWhenNoAvailableAlternatives","abstract":[{"type":"text","text":"Enables periodic requests when there are no known alternative routes yet."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refreshesWhenNoAvailableAlternatives"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20MapboxNavigationCore32AlternativeRoutesDetectionConfigV14RefreshOnEmptyO","kind":"typeIdentifier","text":"RefreshOnEmpty"}],"url":"\/documentation\/mapboxnavigationcore\/alternativeroutesdetectionconfig\/refresheswhennoavailablealternatives","role":"symbol","identifier":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/refreshesWhenNoAvailableAlternatives","kind":"symbol","type":"topic"},"doc://MapboxNavigationCore/documentation/MapboxNavigationCore":{"title":"MapboxNavigationCore","identifier":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore","role":"collection","type":"topic","abstract":[],"url":"\/documentation\/mapboxnavigationcore","kind":"symbol"},"doc://MapboxNavigationCore/documentation/MapboxNavigationCore/AlternativeRoutesDetectionConfig/Equatable-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","title":"Equatable Implementations","type":"topic","url":"\/documentation\/mapboxnavigationcore\/alternativeroutesdetectionconfig\/equatable-implementations","identifier":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/Equatable-Implementations"},"doc://MapboxNavigationCore/s8SendableP":{"identifier":"doc:\/\/MapboxNavigationCore\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://MapboxNavigationCore/documentation/MapboxNavigationCore/AlternativeRoutesDetectionConfig/AcceptionPolicy-swift.struct":{"identifier":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/AcceptionPolicy-swift.struct","type":"topic","kind":"symbol","title":"AlternativeRoutesDetectionConfig.AcceptionPolicy","url":"\/documentation\/mapboxnavigationcore\/alternativeroutesdetectionconfig\/acceptionpolicy-swift.struct","role":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AcceptionPolicy"}],"navigatorTitle":[{"kind":"identifier","text":"AcceptionPolicy"}]},"doc://MapboxNavigationCore/documentation/MapboxNavigationCore/AlternativeRoutesDetectionConfig/refreshesAfterPassingDeviation":{"title":"refreshesAfterPassingDeviation","kind":"symbol","abstract":[{"type":"text","text":"Enables requesting for new alternative routes after passing a fork (intersection) where another alternative route branches."}],"url":"\/documentation\/mapboxnavigationcore\/alternativeroutesdetectionconfig\/refreshesafterpassingdeviation","identifier":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/refreshesAfterPassingDeviation","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refreshesAfterPassingDeviation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://MapboxNavigationCore/documentation/MapboxNavigationCore/AlternativeRoutesDetectionConfig":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AlternativeRoutesDetectionConfig"}],"kind":"symbol","title":"AlternativeRoutesDetectionConfig","url":"\/documentation\/mapboxnavigationcore\/alternativeroutesdetectionconfig","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlternativeRoutesDetectionConfig"}],"abstract":[{"text":"Options to configure fetching,  detecting and accepting ","type":"text"},{"type":"codeVoice","code":"AlternativeRoute"},{"text":"s during navigation.","type":"text"}],"identifier":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig"},"doc://MapboxNavigationCore/documentation/MapboxNavigationCore/AlternativeRoutesDetectionConfig/init(refreshesAfterPassingDeviation:refreshesWhenNoAvailableAlternatives:acceptionPolicy:)":{"title":"init(refreshesAfterPassingDeviation:refreshesWhenNoAvailableAlternatives:acceptionPolicy:)","kind":"symbol","abstract":[{"type":"text","text":"Creates new "},{"type":"codeVoice","code":"AlternativeRoutesStrategy"},{"text":" instance.","type":"text"}],"url":"\/documentation\/mapboxnavigationcore\/alternativeroutesdetectionconfig\/init(refreshesafterpassingdeviation:refresheswhennoavailablealternatives:acceptionpolicy:)","identifier":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/init(refreshesAfterPassingDeviation:refreshesWhenNoAvailableAlternatives:acceptionPolicy:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"refreshesAfterPassingDeviation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"refreshesWhenNoAvailableAlternatives","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:20MapboxNavigationCore32AlternativeRoutesDetectionConfigV14RefreshOnEmptyO","text":"RefreshOnEmpty"},{"kind":"text","text":", "},{"text":"acceptionPolicy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AcceptionPolicy","kind":"typeIdentifier","preciseIdentifier":"s:20MapboxNavigationCore32AlternativeRoutesDetectionConfigV15AcceptionPolicyV"},{"kind":"text","text":")"}],"role":"symbol","type":"topic"},"doc://MapboxNavigationCore/documentation/MapboxNavigationCore/AlternativeRoutesDetectionConfig/acceptionPolicy-swift.property":{"url":"\/documentation\/mapboxnavigationcore\/alternativeroutesdetectionconfig\/acceptionpolicy-swift.property","identifier":"doc:\/\/MapboxNavigationCore\/documentation\/MapboxNavigationCore\/AlternativeRoutesDetectionConfig\/acceptionPolicy-swift.property","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"acceptionPolicy","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AcceptionPolicy","preciseIdentifier":"s:20MapboxNavigationCore32AlternativeRoutesDetectionConfigV15AcceptionPolicyV"}],"kind":"symbol","title":"acceptionPolicy","abstract":[],"type":"topic"}}}