{"abstract":[{"text":"Returns a new set containing the elements of this set that do not occur","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the given set."}],"identifier":{"url":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/AttributeOptions\/subtracting(_:comparisonPolicy:)","interfaceLanguage":"swift"},"metadata":{"title":"subtracting(_:comparisonPolicy:)","modules":[{"name":"MapboxDirections"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:16MapboxDirections20CustomValueOptionSetPAAE11subtracting_16comparisonPolicyxx_AA0ce10ComparisonI0OtF::SYNTHESIZED::s:16MapboxDirections16AttributeOptionsV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subtracting"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":", ","kind":"text"},{"text":"comparisonPolicy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","text":"CustomOptionComparisonPolicy"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"}],"role":"symbol","extendedModule":"MapboxDirections"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"subtracting","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"comparisonPolicy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","text":"CustomOptionComparisonPolicy","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomOptionComparisonPolicy","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"text":"A set of the same type as the current set.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"comparison method to be used for "},{"type":"codeVoice","code":"customOptionsByRawValue"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"comparisonPolicy"}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A new set.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"In the following example, the ","type":"text"},{"type":"codeVoice","code":"nonNeighbors"},{"text":" set is made up of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements of the "},{"code":"employees","type":"codeVoice"},{"type":"text","text":" set that are not elements of "},{"code":"neighbors","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let neighbors: Set = [\"Bethany\", \"Eric\", \"Forlani\", \"Greta\"]","let nonNeighbors = employees.subtracting(neighbors)","print(nonNeighbors)","\/\/ Prints \"[\"Diana\", \"Chris\", \"Alicia\"]\""]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxdirections\/attributeoptions\/subtracting(_:comparisonpolicy:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/AttributeOptions","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/AttributeOptions\/CustomValueOptionSet-Implementations"]]},"references":{"doc://com.mapbox.navigation/documentation/MapboxDirections/AttributeOptions/subtracting(_:comparisonPolicy:)":{"type":"topic","url":"\/documentation\/mapboxdirections\/attributeoptions\/subtracting(_:comparisonpolicy:)","abstract":[{"type":"text","text":"Returns a new set containing the elements of this set that do not occur"},{"type":"text","text":" "},{"text":"in the given set.","type":"text"}],"title":"subtracting(_:comparisonPolicy:)","kind":"symbol","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/AttributeOptions\/subtracting(_:comparisonPolicy:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"subtracting","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"comparisonPolicy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","text":"CustomOptionComparisonPolicy","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element","kind":"typeIdentifier"}]},"doc://com.mapbox.navigation/documentation/MapboxDirections":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","url":"\/documentation\/mapboxdirections","role":"collection","abstract":[{"type":"text","text":"Quickly get driving, cycling, or walking directions, whether the trip is nonstop or it has multiple stopping points."}],"title":"MapboxDirections"},"doc://com.mapbox.navigation/documentation/MapboxDirections/AttributeOptions":{"navigatorTitle":[{"text":"AttributeOptions","kind":"identifier"}],"url":"\/documentation\/mapboxdirections\/attributeoptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AttributeOptions","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/AttributeOptions","title":"AttributeOptions","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Attributes are metadata information for a route leg."}]},"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomOptionComparisonPolicy":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomOptionComparisonPolicy"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomOptionComparisonPolicy","title":"CustomOptionComparisonPolicy","url":"\/documentation\/mapboxdirections\/customoptioncomparisonpolicy","abstract":[{"text":"Describes how ","type":"text"},{"code":"customOptionsByRawValue","type":"codeVoice"},{"text":" component is compared during logical operations in ","type":"text"},{"code":"CustomValueOptionSet","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomOptionComparisonPolicy"}]},"doc://com.mapbox.navigation/documentation/MapboxDirections/AttributeOptions/CustomValueOptionSet-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/AttributeOptions\/CustomValueOptionSet-Implementations","title":"CustomValueOptionSet Implementations","url":"\/documentation\/mapboxdirections\/attributeoptions\/customvalueoptionset-implementations","abstract":[]}}}